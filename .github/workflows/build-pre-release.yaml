name: Build and Conditional Release LaTeX PDF

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ“¥ Checkout Repository
        uses: actions/checkout@v4

      - name: Set up LaTeX environment
        run: sudo apt-get update && sudo apt-get install -y texlive texlive-lang-german texlive-latex-extra biber make

      - name: Build LaTeX Project
        run: make build

      - name: Read timestamp from file
        id: timestamp
        run: echo "timestamp=$(cat .timestamp)" >> $GITHUB_ENV

      - name: Find generated PDF
        id: findpdf
        run: |
          FILE=$(ls build/${{ env.timestamp }}_*.pdf | head -n 1)
          echo "pdf_file=$FILE" >> $GITHUB_ENV

      - name: ðŸ“‹ Get latest commit message (safe Base64 version)
        id: commitmsg
        run: |
          raw_msg=$(git log -1 --pretty=%B)
          encoded_msg=$(echo "$raw_msg" | base64 -w 0)
          echo "commit_message_b64=$encoded_msg" >> $GITHUB_ENV
          if echo "$raw_msg" | grep -q "#release"; then
            echo "should_release=true" >> $GITHUB_ENV
          else
            echo "should_release=false" >> $GITHUB_ENV
          fi

      - name: Decode Commit Message for Release
        id: decode_commit
        run: |
          echo "decoded_message=$(echo "${{ env.commit_message_b64 }}" | base64 -d)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release (only if \#release is in commit)
        if: env.should_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          name: "${{ env.timestamp }}"
          tag_name: "build-${{ env.timestamp }}"
          body: ${{ steps.decode_commit.outputs.decoded_message }}
          prerelease: true
          files: ${{ env.pdf_file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}